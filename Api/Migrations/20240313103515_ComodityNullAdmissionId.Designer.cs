// <auto-generated />
using System;
using Api.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240313103515_ComodityNullAdmissionId")]
    partial class ComodityNullAdmissionId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdmissionDocumentLabel", b =>
                {
                    b.Property<int>("AdmissionDocumentsId")
                        .HasColumnType("int");

                    b.Property<int>("LablesId")
                        .HasColumnType("int");

                    b.HasKey("AdmissionDocumentsId", "LablesId");

                    b.HasIndex("LablesId");

                    b.ToTable("AdmissionDocumentLabel");
                });

            modelBuilder.Entity("Api.Model.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Api.Model.Entities.AdmissionDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("Canceled")
                        .HasColumnType("bit");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("TargetWarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TargetWarehouseId");

                    b.ToTable("AdmissionDocuments");
                });

            modelBuilder.Entity("Api.Model.Entities.Commodity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdmissionDocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdmissionDocumentId");

                    b.ToTable("Commodities");
                });

            modelBuilder.Entity("Api.Model.Entities.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("Api.Model.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Api.Model.Entities.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("AdmissionDocumentLabel", b =>
                {
                    b.HasOne("Api.Model.Entities.AdmissionDocument", null)
                        .WithMany()
                        .HasForeignKey("AdmissionDocumentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Model.Entities.Label", null)
                        .WithMany()
                        .HasForeignKey("LablesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api.Model.Entities.Address", b =>
                {
                    b.HasOne("Api.Model.Entities.Supplier", "Supplier")
                        .WithOne("Address")
                        .HasForeignKey("Api.Model.Entities.Address", "SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Api.Model.Entities.AdmissionDocument", b =>
                {
                    b.HasOne("Api.Model.Entities.Supplier", "Supplier")
                        .WithMany("AdmissionDocuments")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Api.Model.Entities.Warehouse", "TargetWarehouse")
                        .WithMany("AdmissionDocuments")
                        .HasForeignKey("TargetWarehouseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Supplier");

                    b.Navigation("TargetWarehouse");
                });

            modelBuilder.Entity("Api.Model.Entities.Commodity", b =>
                {
                    b.HasOne("Api.Model.Entities.AdmissionDocument", "AdmissionDocument")
                        .WithMany("CommodityList")
                        .HasForeignKey("AdmissionDocumentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("AdmissionDocument");
                });

            modelBuilder.Entity("Api.Model.Entities.AdmissionDocument", b =>
                {
                    b.Navigation("CommodityList");
                });

            modelBuilder.Entity("Api.Model.Entities.Supplier", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("AdmissionDocuments");
                });

            modelBuilder.Entity("Api.Model.Entities.Warehouse", b =>
                {
                    b.Navigation("AdmissionDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
